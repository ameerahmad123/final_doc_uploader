{"ast":null,"code":"import _regeneratorRuntime from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/abdul/imageup1/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/abdul/imageup1/src/components/App.js\";\nimport React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json';\n\nvar ipfsClient = require('ipfs-http-client');\n\nvar ipfs = ipfsClient({\n  host: 'ipfs.infura.io',\n  port: 5001,\n  protocol: 'https'\n}); // leaving out the arguments will default to these values\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      console.log('file captured...'); // process file for ipfs\n\n      var file = event.target.files[0];\n      var reader = window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer.from(reader.result)\n        });\n      };\n    };\n\n    _this.captureFile = function (event) {\n      event.preventDefault();\n      var file = event.target.files[0];\n      var reader = new window.FileReader();\n      reader.readAsArrayBuffer(file);\n\n      reader.onloadend = function () {\n        _this.setState({\n          buffer: Buffer(reader.result)\n        });\n\n        console.log('buffer', _this.state.buffer);\n      };\n    };\n\n    _this.onSubmit =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(event) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                event.preventDefault();\n                console.log(\"Submitting the form...\");\n                _context.next = 4;\n                return ipfs.add(_this.state.buffer, function (error, result) {\n                  console.log('IPFS result', result);\n                  var memeHash = result[0].hash;\n\n                  _this.setState({\n                    memeHash: memeHash\n                  });\n\n                  if (error) {\n                    console.error(error);\n                    return;\n                  }\n\n                  _this.state.contract.methods.set(memeHash).send({\n                    from: _this.state.account\n                  }).then(function (r) {\n                    _this.setState({\n                      memeHash: memeHash\n                    });\n                  });\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.state = {\n      buffer: null,\n      memeHash: 'QmcdDq6h9TeGVF8TTpcA7Q7wMZbZWQZ7F9PetxLNbnE3jP'\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentWillMount\",\n    value: function () {\n      var _componentWillMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2() {\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return this.loadWeb3();\n\n              case 2:\n                _context2.next = 4;\n                return this.loadBlockchainData();\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentWillMount() {\n        return _componentWillMount.apply(this, arguments);\n      }\n\n      return componentWillMount;\n    }()\n  }, {\n    key: \"loadWeb3\",\n    value: function () {\n      var _loadWeb = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                if (!window.ethereum) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                window.web3 = new Web3(window.ethereum);\n                _context3.next = 4;\n                return window.ethereum.enable();\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                if (window.web3) {\n                  window.web3 = new Web3(window.web3.currentProvider);\n                } else {\n                  window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!');\n                }\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3);\n      }));\n\n      function loadWeb3() {\n        return _loadWeb.apply(this, arguments);\n      }\n\n      return loadWeb3;\n    }()\n  }, {\n    key: \"loadBlockchainData\",\n    value: function () {\n      var _loadBlockchainData = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4() {\n        var web3, accounts, networkId, networkData, contract, memeHash;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                web3 = window.web3; // Load account\n\n                _context4.next = 3;\n                return web3.eth.getAccounts();\n\n              case 3:\n                accounts = _context4.sent;\n                this.setState({\n                  account: accounts[0]\n                });\n                _context4.next = 7;\n                return web3.eth.net.getId();\n\n              case 7:\n                networkId = _context4.sent;\n                networkData = Meme.networks[networkId];\n\n                if (!networkData) {\n                  _context4.next = 18;\n                  break;\n                }\n\n                contract = web3.eth.Contract(Meme.abi, networkData.address);\n                this.setState({\n                  contract: contract\n                });\n                _context4.next = 14;\n                return contract.methods.get().call();\n\n              case 14:\n                memeHash = _context4.sent;\n                this.setState({\n                  memeHash: memeHash\n                });\n                _context4.next = 19;\n                break;\n\n              case 18:\n                window.alert('Smart contract not deployed to detected network.');\n\n              case 19:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function loadBlockchainData() {\n        return _loadBlockchainData.apply(this, arguments);\n      }\n\n      return loadBlockchainData;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(\"nav\", {\n        className: \"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        className: \"navbar-brand col-sm-3 col-md-2 mr-0\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        href: \"https://gateway.ipfs.io/ipfs/\".concat(this.state.memeHash),\n        download: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, \" click here to download the uploaded image\")), React.createElement(\"div\", {\n        className: \"container-fluid mt-5\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"main\", {\n        role: \"main\",\n        className: \"col-lg-12 d-flex text-center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"content mr-auto ml-auto\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"a\", {\n        rel: \"noopener noreferrer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"img\", {\n        src: \"https://gateway.ipfs.io/ipfs/QmSVPV4ccnNiz65PmPZt76pfpGZza6mK7Czh5sxyFzGxoV\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      })), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      }, \"\\xA0\"), React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, \"New image\"), React.createElement(\"form\", {\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"file\",\n        onChange: this.captureFile,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/home/abdul/imageup1/src/components/App.js"],"names":["React","Component","Web3","Meme","ipfsClient","require","ipfs","host","port","protocol","App","props","captureFile","event","preventDefault","console","log","file","target","files","reader","window","FileReader","readAsArrayBuffer","onloadend","setState","buffer","Buffer","from","result","state","onSubmit","add","error","memeHash","hash","contract","methods","set","send","account","then","r","loadWeb3","loadBlockchainData","ethereum","web3","enable","currentProvider","alert","eth","getAccounts","accounts","net","getId","networkId","networkData","networks","Contract","abi","address","get","call"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Web3 from 'web3';\nimport './App.css';\nimport Meme from '../abis/Meme.json'\n\nconst ipfsClient = require('ipfs-http-client')\nconst ipfs = ipfsClient({ host: 'ipfs.infura.io', port: 5001, protocol: 'https' }) // leaving out the arguments will default to these values\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      buffer: null,\n      memeHash: 'QmcdDq6h9TeGVF8TTpcA7Q7wMZbZWQZ7F9PetxLNbnE3jP'\n    };\n  }\n\n  captureFile = (event) => {\n    event.preventDefault()\n    console.log ('file captured...')\n    // process file for ipfs\n    const file = event.target.files[0]\n    const reader = window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer.from(reader.result) })\n    }\n  }\n\n  async componentWillMount() {\n    await this.loadWeb3()\n    await this.loadBlockchainData()\n  }\n\n  async loadWeb3() {\n    if (window.ethereum) {\n      window.web3 = new Web3(window.ethereum)\n      await window.ethereum.enable()\n    }\n    else if (window.web3) {\n      window.web3 = new Web3(window.web3.currentProvider)\n    }\n    else {\n      window.alert('Non-Ethereum browser detected. You should consider trying MetaMask!')\n    }\n  }\n\n  async loadBlockchainData() {\n    const web3 = window.web3\n    // Load account\n    const accounts = await web3.eth.getAccounts()\n    this.setState({ account: accounts[0] })\n    const networkId = await web3.eth.net.getId()\n    const networkData = Meme.networks[networkId]\n    if(networkData) {\n      const contract = web3.eth.Contract(Meme.abi, networkData.address)\n      this.setState({ contract })\n      const memeHash = await contract.methods.get().call()\n      this.setState({memeHash})\n    } else {\n      window.alert('Smart contract not deployed to detected network.')\n    }\n  }\n\n\n\n  captureFile = (event) => {\n    event.preventDefault()\n    const file = event.target.files[0]\n    const reader = new window.FileReader()\n    reader.readAsArrayBuffer(file)\n    reader.onloadend = () => {\n      this.setState({ buffer: Buffer(reader.result) })\n      console.log('buffer', this.state.buffer)\n    }\n  }\n\nonSubmit = async (event) => {\n      event.preventDefault()\n      console.log(\"Submitting the form...\")\n      await ipfs.add(this.state.buffer, (error, result) => {\n           console.log('IPFS result', result)\n           const memeHash = result[0].hash\n           this.setState({ memeHash })\n            if(error) {\n               console.error(error)\n               return\n            }\n            this.state.contract.methods.set(memeHash).send({ from: this.state.account }).then((r) => {\n              this.setState({memeHash})\n            })\n       })\n  }\n\n  render() {\n    return (\n      <div>\n        <nav className=\"navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow\">\n          <a\n            className=\"navbar-brand col-sm-3 col-md-2 mr-0\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href={`https://gateway.ipfs.io/ipfs/${this.state.memeHash}`}\n            download > click here to download the uploaded image\n          </a>\n        </nav>\n        <div className=\"container-fluid mt-5\">\n          <div className=\"row\">\n            <main role=\"main\" className=\"col-lg-12 d-flex text-center\">\n              <div className=\"content mr-auto ml-auto\">\n                <a\n                  rel=\"noopener noreferrer\"\n                >\n                  <img src={`https://gateway.ipfs.io/ipfs/QmSVPV4ccnNiz65PmPZt76pfpGZza6mK7Czh5sxyFzGxoV`}/>\n                </a>\n                <p>&nbsp;</p>\n                <h2>New image</h2>\n\n                  <form onSubmit={this.onSubmit} >\n                  <input type='file' onChange={this.captureFile}/>\n                  <input type='submit'/>\n\n                </form>\n              </div>\n            </main>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}